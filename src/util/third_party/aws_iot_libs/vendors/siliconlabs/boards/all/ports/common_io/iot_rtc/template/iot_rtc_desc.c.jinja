/***************************************************************************//**
 * @file    iot_rtc_desc.c.jinja
 * @brief   RTC instance descriptors - auto-generated file.
 *******************************************************************************
 * # License
 * <b>Copyright 2021 Silicon Laboratories Inc. www.silabs.com</b>
 *******************************************************************************
 *
 * SPDX-License-Identifier: Zlib
 *
 * The licensor of this software is Silicon Laboratories Inc.
 *
 * This software is provided 'as-is', without any express or implied
 * warranty. In no event will the authors be held liable for any damages
 * arising from the use of this software.
 *
 * Permission is granted to anyone to use this software for any purpose,
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 *
 * 1. The origin of this software must not be misrepresented; you must not
 *    claim that you wrote the original software. If you use this software
 *    in a product, an acknowledgment in the product documentation would be
 *    appreciated but is not required.
 * 2. Altered source versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 * 3. This notice may not be removed or altered from any source distribution.
 *
 ******************************************************************************/

/*******************************************************************************
 *                               INCLUDES
 ******************************************************************************/

/* standard C */
#include "stddef.h"

/* RTC driver layer */
#include "iot_rtc_desc.h"

{% for instance in iot_rtc_instances %}
/* instance {{ instance }} config */
#include "iot_rtc_cfg_{{ instance }}.h"
{% endfor %}

/*******************************************************************************
 *                            DESCRIPTOR LIST
 ******************************************************************************/

IotRtcDescriptor_t iot_rtc_desc[] = {

{% for instance in iot_rtc_instances %}
  /* instance {{ instance }} config */
  {
    /* instance number */
    .lInstNum           = IOT_RTC_CFG_{{ instance | upper }}_INST_NUM,
  },
{% endfor %}
};

/*******************************************************************************
 *                          iot_rtc_desc_get
 ******************************************************************************/

IotRtcDescriptor_t *iot_rtc_desc_get(int32_t lInstNum)
{
  int32_t lInstCount = sizeof(iot_rtc_desc)/sizeof(IotRtcDescriptor_t);
  int32_t lInstCur   = 0;

  for (lInstCur = 0; lInstCur < lInstCount; lInstCur++) {
    if (iot_rtc_desc[lInstCur].lInstNum == lInstNum) {
      return &iot_rtc_desc[lInstCur];
    }
  }

  return NULL;
}
