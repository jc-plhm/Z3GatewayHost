name=FreeRTOS
description=This plugin provides FreeRTOS support. If this plugin is enabled, the stack will be running within FreeRTOS as a FreeRTOS task.

category=Utility
qualityString=Production Ready
quality=production
includedByDefault=false

architecture=efr32+iar,simulation

providedApis=freertos,rtos-instance
requiredApis=mbedtls

# This makes the plugin not throw an error if files are missing, but only show it as disabled.
missingFileHandling=disable

sourceFiles=

$FREERTOS/Source/croutine.c
$FREERTOS/Source/event_groups.c
$FREERTOS/Source/list.c
$FREERTOS/Source/queue.c
$FREERTOS/Source/stream_buffer.c
$FREERTOS/Source/tasks.c
$FREERTOS/Source/timers.c
#
$FREERTOS/Source/portable/MemMang/heap_3.c

# # M4 specific CPU files (IAR)
# # TODO: these should be (efr32+iar) but it doesn't work. This should be do-able after gcc support is in.
$FREERTOS/Source/portable/IAR/ARM_CM4F/port.c          (efr32)
$FREERTOS/Source/portable/IAR/ARM_CM4F/portasm.s       (efr32)

# cmsis layer
$FREERTOS/CMSIS/RTOS2/FreeRTOS/Source/cmsis_os2.c

# TODO: add files for other compilers and platforms.

setup(additionalFiles) {
   PATH(ABSOLUTE):$FRAMEWORK/plugin-soc/freertos/config
   PATH(ABSOLUTE):$FREERTOS/Source/include
   PATH(ABSOLUTE):$FREERTOS/Source/portable/IAR/ARM_CM4F
   PATH(ABSOLUTE):$FREERTOS/CMSIS/RTOS2/FreeRTOS/Include
}

setup(macros){
  -DSL_CATALOG_FREERTOS_KERNEL_PRESENT
}
